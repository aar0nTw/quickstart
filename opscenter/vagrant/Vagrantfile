$script = <<SCRIPT
[Unit]
    Description=Set Up Default Routes
    After=network.target

[Service]
    Type=oneshot
    ExecStart=-/sbin/ip route add 10.100.0.0/16 dev eth1

[Install]
    WantedBy=multi-user.target
SCRIPT

ip = "172.28.128.5"

Vagrant.configure(2) do |config|
  # create a new volume (vdi file)
  def attach_media(vb, controller_name, device, sizeMB, port)
    vdi_file = vb.name + device + ".vdi"
    unless File.exist?(vdi_file)
       vb.customize ["createhd", "--filename", vdi_file, "--size", sizeMB * 1024]
    end
    vb.customize ["storageattach", :id, "--storagectl", controller_name, "--port", port,
                  "--device", 0, "--type", "hdd", "--medium", vdi_file]
  end

  def create_node(vm, node_name, cpus, ram_mb, private_ip)
    vm.define node_name do |node|
      node.vm.hostname = node_name
      node.vm.network "private_network",
          :ip => "#{private_ip}",
          :libvirt__forward_mode => 'none'
      node.vm.provider :libvirt do |libvirt|
        libvirt.cpus = cpus
        libvirt.memory = ram_mb
        libvirt.storage :file, :size => '10G', :type => 'raw', :device => "vdb", :allow_existing => false
      end
      node.vm.provider "virtualbox" do |vb|
        vb.name = node.vm.hostname
        vb.cpus = cpus
        vb.memory = ram_mb
        attach_media(vb, "IDE Controller", "sdb", 10, 1) # 10Gb, /var/lib/gravity
      end
    end
  end

  config.vm.box = "centos/7"
  config.vm.box_check_update = false

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  config.vm.provision "file", source: "../server.key", destination: "~/server.key"
  config.vm.provision "file", source: "../server.crt", destination: "~/server.crt"
  config.vm.provision "file", source: "../opscenter.yaml", destination: "~/opscenter-base.yaml"

  token = ENV['TOKEN']
  name = "telekube-opscenter-test"

  config.vm.provision :shell do |shell|
    shell.args = "#{ip} #{token} #{name}"
    shell.inline = <<-SHELL

    yum -y install net-tools curl
    curl https://get.gravitational.io/telekube/install | bash

    export PATH=/usr/local/bin:$PATH

    if lsblk -n /dev/vdb; then
      dev_letter=v
    else
      dev_letter=s
    fi

    gravity_device=${dev_letter}db
    umount /dev/${gravity_device} || true
    mkfs.xfs -f /dev/${gravity_device}
    sed -i.bak "/${gravity_device}/d" /etc/fstab
    echo -e "/dev/${gravity_device}\t/var/lib/gravity\txfs\tdefaults\t0\t2" >> /etc/fstab
    mkdir -p /var/lib/gravity
    mount /var/lib/gravity
    chown -R 1000:1000 /var/lib/gravity
    sed -i.bak "s/Defaults    requiretty/#Defaults    requiretty/g" /etc/sudoers

    mkdir -p /etc/gravitational
    cp /home/vagrant/server.key /etc/gravitational/server.key
    cp /home/vagrant/server.crt /etc/gravitational/server.crt

    mkdir -p /home/vagrant/opscenter
    cd /home/vagrant/opscenter
    tele pull opscenter:0.0.0+latest -o installer.tar.gz
    tar xvf ./installer.tar.gz

    ./gravity ops config --value="$(cat /home/vagrant/opscenter-base.yaml)" > /etc/gravitational/opscenter.yaml

    ./gravity install --advertise-addr=$1 --token=$2 --flavor=standalone --cluster=$3 --config=/etc/gravitational/opscenter.yaml --debug
SHELL
  end

  cpus = ENV['VAGRANT_NODE_CPUS'] || 1
  ram = ENV['VAGRANT_NODE_RAM'] || 3000

  create_node(config.vm, "node-1", cpus, ram, ip)
end
